# DataSource
#spring.datasource.url = ${spring_datasource_url}
#spring.datasource.username = ${spring_datasource_username}
#spring.datasource.password = ${spring_datasource_password}

#druid datasouce database settings begin
spring.druid.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.druid.datasource.driverClassName=com.mysql.jdbc.Driver
spring.druid.datasource.url=${spring_datasource_url}
spring.druid.datasource.username=${spring_datasource_username}
spring.druid.datasource.password=${spring_datasource_password}

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.druid.datasource.initialSize=5
spring.druid.datasource.minIdle=5
spring.druid.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.druid.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.druid.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.druid.datasource.minEvictableIdleTimeMillis=300000
spring.druid.datasource.validationQuery=SELECT 1 FROM DUAL
spring.druid.datasource.testWhileIdle=true
spring.druid.datasource.testOnBorrow=false
spring.druid.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.druid.datasource.poolPreparedStatements=true
spring.druid.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.druid.datasource.filters=stat,wall,log4j,config
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录,以及配置密码加密
spring.druid.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=true;config.decrypt.key=${spring_datasource_publickey}
# 合并多个DruidDataSource的监控数据
spring.druid.datasource.useGlobalDataSourceStat=true
#druid datasouce database settings end
